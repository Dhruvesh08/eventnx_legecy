//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EventRegistrationEntities : DbContext
    {
        public EventRegistrationEntities()
            : base("name=EventRegistrationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UserPackage> UserPackages { get; set; }
        public virtual DbSet<Adminsetting> Adminsettings { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Package> Packages { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerRole> CustomerRoles { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<VisitorState> VisitorStates { get; set; }
        public virtual DbSet<UserConnection> UserConnections { get; set; }
        public virtual DbSet<country> countries { get; set; }
        public virtual DbSet<EventUser> EventUsers { get; set; }
        public virtual DbSet<RegisteredUser> RegisteredUsers { get; set; }
        public virtual DbSet<EventMaster> EventMasters { get; set; }
        public virtual DbSet<ZoomUserDetail> ZoomUserDetails { get; set; }
        public virtual DbSet<BigMarkerUserDetail> BigMarkerUserDetails { get; set; }
    
        public virtual ObjectResult<GetDetails_Result> GetDetails(Nullable<int> id, string alpha)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var alphaParameter = alpha != null ?
                new ObjectParameter("alpha", alpha) :
                new ObjectParameter("alpha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDetails_Result>("GetDetails", idParameter, alphaParameter);
        }
    
        public virtual ObjectResult<Packagedetails_Result> Packagedetails(Nullable<int> id, string alpha)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var alphaParameter = alpha != null ?
                new ObjectParameter("alpha", alpha) :
                new ObjectParameter("alpha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Packagedetails_Result>("Packagedetails", idParameter, alphaParameter);
        }
    
        public virtual ObjectResult<GetCustomerDetails_Result> GetCustomerDetails(Nullable<int> id, string alpha)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var alphaParameter = alpha != null ?
                new ObjectParameter("alpha", alpha) :
                new ObjectParameter("alpha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerDetails_Result>("GetCustomerDetails", idParameter, alphaParameter);
        }
    
        public virtual ObjectResult<Packagedetails1_Result> Packagedetails1(Nullable<int> id, string alpha)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var alphaParameter = alpha != null ?
                new ObjectParameter("alpha", alpha) :
                new ObjectParameter("alpha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Packagedetails1_Result>("Packagedetails1", idParameter, alphaParameter);
        }
    
        public virtual ObjectResult<AdminDetails_Result> AdminDetails(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminDetails_Result>("AdminDetails", idParameter);
        }
    
        public virtual ObjectResult<GetUserConnectionDetails_Result> GetUserConnectionDetails(Nullable<int> userid, Nullable<int> eventid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var eventidParameter = eventid.HasValue ?
                new ObjectParameter("eventid", eventid) :
                new ObjectParameter("eventid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserConnectionDetails_Result>("GetUserConnectionDetails", useridParameter, eventidParameter);
        }
    
        public virtual ObjectResult<GetOrderDetails_Result> GetOrderDetails(Nullable<int> customerId, Nullable<int> orderId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderDetails_Result>("GetOrderDetails", customerIdParameter, orderIdParameter);
        }
    
        public virtual ObjectResult<GetPostEventDetails_Result> GetPostEventDetails(Nullable<int> id, Nullable<int> customerId, string alpha, string searchtitle)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var alphaParameter = alpha != null ?
                new ObjectParameter("alpha", alpha) :
                new ObjectParameter("alpha", typeof(string));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPostEventDetails_Result>("GetPostEventDetails", idParameter, customerIdParameter, alphaParameter, searchtitleParameter);
        }
    
        public virtual ObjectResult<CustomerEmails_Result> CustomerEmails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerEmails_Result>("CustomerEmails");
        }
    
        public virtual ObjectResult<EventUserDetails_Result> EventUserDetails(Nullable<int> @event)
        {
            var eventParameter = @event.HasValue ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EventUserDetails_Result>("EventUserDetails", eventParameter);
        }
    
        public virtual ObjectResult<GetRegisteredUserDetails_Result> GetRegisteredUserDetails(Nullable<int> id, string alpha, string searchtitle, string domain, Nullable<int> @event, Nullable<int> customerId, Nullable<int> referralid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var alphaParameter = alpha != null ?
                new ObjectParameter("alpha", alpha) :
                new ObjectParameter("alpha", typeof(string));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            var domainParameter = domain != null ?
                new ObjectParameter("domain", domain) :
                new ObjectParameter("domain", typeof(string));
    
            var eventParameter = @event.HasValue ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var referralidParameter = referralid.HasValue ?
                new ObjectParameter("referralid", referralid) :
                new ObjectParameter("referralid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRegisteredUserDetails_Result>("GetRegisteredUserDetails", idParameter, alphaParameter, searchtitleParameter, domainParameter, eventParameter, customerIdParameter, referralidParameter);
        }
    
        public virtual ObjectResult<GetTransactionsDetails_Result> GetTransactionsDetails(Nullable<int> id, Nullable<int> customerId, string transactiontype, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var transactiontypeParameter = transactiontype != null ?
                new ObjectParameter("transactiontype", transactiontype) :
                new ObjectParameter("transactiontype", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransactionsDetails_Result>("GetTransactionsDetails", idParameter, customerIdParameter, transactiontypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<ManageEvents_Result> ManageEvents(Nullable<int> id, string searchtitle)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ManageEvents_Result>("ManageEvents", idParameter, searchtitleParameter);
        }
    
        public virtual ObjectResult<eventwiseuser_Result> eventwiseuser(Nullable<int> id, string alpha, string searchtitle, string domain, Nullable<int> @event, Nullable<int> customerId, Nullable<int> referralid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var alphaParameter = alpha != null ?
                new ObjectParameter("alpha", alpha) :
                new ObjectParameter("alpha", typeof(string));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            var domainParameter = domain != null ?
                new ObjectParameter("domain", domain) :
                new ObjectParameter("domain", typeof(string));
    
            var eventParameter = @event.HasValue ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var referralidParameter = referralid.HasValue ?
                new ObjectParameter("referralid", referralid) :
                new ObjectParameter("referralid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<eventwiseuser_Result>("eventwiseuser", idParameter, alphaParameter, searchtitleParameter, domainParameter, eventParameter, customerIdParameter, referralidParameter);
        }
    
        public virtual ObjectResult<ReferralUserReport_Result> ReferralUserReport(Nullable<int> id, Nullable<int> @event, Nullable<int> customerid, string searchtitle)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var eventParameter = @event.HasValue ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralUserReport_Result>("ReferralUserReport", idParameter, eventParameter, customeridParameter, searchtitleParameter);
        }
    
        public virtual ObjectResult<BounceUserReport_Result> BounceUserReport(Nullable<int> id, Nullable<int> @event, Nullable<int> customerid, string searchtitle)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var eventParameter = @event.HasValue ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BounceUserReport_Result>("BounceUserReport", idParameter, eventParameter, customeridParameter, searchtitleParameter);
        }
    
        public virtual ObjectResult<GetEventDetails_Result> GetEventDetails(Nullable<int> id, Nullable<int> customerId, string alpha, string searchtitle, string manageevent)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var alphaParameter = alpha != null ?
                new ObjectParameter("alpha", alpha) :
                new ObjectParameter("alpha", typeof(string));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            var manageeventParameter = manageevent != null ?
                new ObjectParameter("manageevent", manageevent) :
                new ObjectParameter("manageevent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventDetails_Result>("GetEventDetails", idParameter, customerIdParameter, alphaParameter, searchtitleParameter, manageeventParameter);
        }
    
        public virtual ObjectResult<GetUserDetails_Result> GetUserDetails(Nullable<int> id, string alpha, string searchtitle, string domain, Nullable<int> @event, Nullable<int> referralid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var alphaParameter = alpha != null ?
                new ObjectParameter("alpha", alpha) :
                new ObjectParameter("alpha", typeof(string));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            var domainParameter = domain != null ?
                new ObjectParameter("domain", domain) :
                new ObjectParameter("domain", typeof(string));
    
            var eventParameter = @event.HasValue ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(int));
    
            var referralidParameter = referralid.HasValue ?
                new ObjectParameter("referralid", referralid) :
                new ObjectParameter("referralid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserDetails_Result>("GetUserDetails", idParameter, alphaParameter, searchtitleParameter, domainParameter, eventParameter, referralidParameter);
        }
    
        public virtual int AddZoomUserDetails(Nullable<int> id, Nullable<int> eventId, Nullable<int> registeredUserId, string seniorityLevel, string primaryJobFunction, string natureOfBusiness, string country, string topicOfIntrest, string areyouRegistered, Nullable<bool> optInEmail, Nullable<bool> optInPhone, Nullable<bool> optInDirectEmail, Nullable<bool> optInDGMEvents, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> updatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var registeredUserIdParameter = registeredUserId.HasValue ?
                new ObjectParameter("RegisteredUserId", registeredUserId) :
                new ObjectParameter("RegisteredUserId", typeof(int));
    
            var seniorityLevelParameter = seniorityLevel != null ?
                new ObjectParameter("SeniorityLevel", seniorityLevel) :
                new ObjectParameter("SeniorityLevel", typeof(string));
    
            var primaryJobFunctionParameter = primaryJobFunction != null ?
                new ObjectParameter("PrimaryJobFunction", primaryJobFunction) :
                new ObjectParameter("PrimaryJobFunction", typeof(string));
    
            var natureOfBusinessParameter = natureOfBusiness != null ?
                new ObjectParameter("NatureOfBusiness", natureOfBusiness) :
                new ObjectParameter("NatureOfBusiness", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var topicOfIntrestParameter = topicOfIntrest != null ?
                new ObjectParameter("TopicOfIntrest", topicOfIntrest) :
                new ObjectParameter("TopicOfIntrest", typeof(string));
    
            var areyouRegisteredParameter = areyouRegistered != null ?
                new ObjectParameter("AreyouRegistered", areyouRegistered) :
                new ObjectParameter("AreyouRegistered", typeof(string));
    
            var optInEmailParameter = optInEmail.HasValue ?
                new ObjectParameter("OptInEmail", optInEmail) :
                new ObjectParameter("OptInEmail", typeof(bool));
    
            var optInPhoneParameter = optInPhone.HasValue ?
                new ObjectParameter("OptInPhone", optInPhone) :
                new ObjectParameter("OptInPhone", typeof(bool));
    
            var optInDirectEmailParameter = optInDirectEmail.HasValue ?
                new ObjectParameter("OptInDirectEmail", optInDirectEmail) :
                new ObjectParameter("OptInDirectEmail", typeof(bool));
    
            var optInDGMEventsParameter = optInDGMEvents.HasValue ?
                new ObjectParameter("OptInDGMEvents", optInDGMEvents) :
                new ObjectParameter("OptInDGMEvents", typeof(bool));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddZoomUserDetails", idParameter, eventIdParameter, registeredUserIdParameter, seniorityLevelParameter, primaryJobFunctionParameter, natureOfBusinessParameter, countryParameter, topicOfIntrestParameter, areyouRegisteredParameter, optInEmailParameter, optInPhoneParameter, optInDirectEmailParameter, optInDGMEventsParameter, createdDateParameter, updatedDateParameter);
        }
    
        public virtual ObjectResult<ZoomUserReport_Result> ZoomUserReport(Nullable<int> id, Nullable<int> @event, Nullable<int> customerid, string searchtitle)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var eventParameter = @event.HasValue ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZoomUserReport_Result>("ZoomUserReport", idParameter, eventParameter, customeridParameter, searchtitleParameter);
        }
    
        public virtual ObjectResult<string> SpGetEventToken(Nullable<int> eventid)
        {
            var eventidParameter = eventid.HasValue ?
                new ObjectParameter("eventid", eventid) :
                new ObjectParameter("eventid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetEventToken", eventidParameter);
        }
    
        public virtual int UpdateZoomToken(string zoomToken, Nullable<int> customerId)
        {
            var zoomTokenParameter = zoomToken != null ?
                new ObjectParameter("ZoomToken", zoomToken) :
                new ObjectParameter("ZoomToken", typeof(string));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateZoomToken", zoomTokenParameter, customerIdParameter);
        }
    
        public virtual int AddBigMarkerUserDetails(Nullable<int> id, Nullable<int> eventId, Nullable<int> registeredUserId, string seniorityLevel, string primaryJobFunction, string natureOfBusiness, string country, string topicOfIntrest, string areyouRegistered, Nullable<bool> optInEmail, Nullable<bool> optInPhone, Nullable<bool> optInDirectEmail, Nullable<bool> optInDGMEvents, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> updatedDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            var registeredUserIdParameter = registeredUserId.HasValue ?
                new ObjectParameter("RegisteredUserId", registeredUserId) :
                new ObjectParameter("RegisteredUserId", typeof(int));
    
            var seniorityLevelParameter = seniorityLevel != null ?
                new ObjectParameter("SeniorityLevel", seniorityLevel) :
                new ObjectParameter("SeniorityLevel", typeof(string));
    
            var primaryJobFunctionParameter = primaryJobFunction != null ?
                new ObjectParameter("PrimaryJobFunction", primaryJobFunction) :
                new ObjectParameter("PrimaryJobFunction", typeof(string));
    
            var natureOfBusinessParameter = natureOfBusiness != null ?
                new ObjectParameter("NatureOfBusiness", natureOfBusiness) :
                new ObjectParameter("NatureOfBusiness", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var topicOfIntrestParameter = topicOfIntrest != null ?
                new ObjectParameter("TopicOfIntrest", topicOfIntrest) :
                new ObjectParameter("TopicOfIntrest", typeof(string));
    
            var areyouRegisteredParameter = areyouRegistered != null ?
                new ObjectParameter("AreyouRegistered", areyouRegistered) :
                new ObjectParameter("AreyouRegistered", typeof(string));
    
            var optInEmailParameter = optInEmail.HasValue ?
                new ObjectParameter("OptInEmail", optInEmail) :
                new ObjectParameter("OptInEmail", typeof(bool));
    
            var optInPhoneParameter = optInPhone.HasValue ?
                new ObjectParameter("OptInPhone", optInPhone) :
                new ObjectParameter("OptInPhone", typeof(bool));
    
            var optInDirectEmailParameter = optInDirectEmail.HasValue ?
                new ObjectParameter("OptInDirectEmail", optInDirectEmail) :
                new ObjectParameter("OptInDirectEmail", typeof(bool));
    
            var optInDGMEventsParameter = optInDGMEvents.HasValue ?
                new ObjectParameter("OptInDGMEvents", optInDGMEvents) :
                new ObjectParameter("OptInDGMEvents", typeof(bool));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddBigMarkerUserDetails", idParameter, eventIdParameter, registeredUserIdParameter, seniorityLevelParameter, primaryJobFunctionParameter, natureOfBusinessParameter, countryParameter, topicOfIntrestParameter, areyouRegisteredParameter, optInEmailParameter, optInPhoneParameter, optInDirectEmailParameter, optInDGMEventsParameter, createdDateParameter, updatedDateParameter);
        }
    
        public virtual ObjectResult<BigMarkerUserReport_Result> BigMarkerUserReport(Nullable<int> id, Nullable<int> @event, Nullable<int> customerid, string searchtitle)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var eventParameter = @event.HasValue ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            var searchtitleParameter = searchtitle != null ?
                new ObjectParameter("searchtitle", searchtitle) :
                new ObjectParameter("searchtitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BigMarkerUserReport_Result>("BigMarkerUserReport", idParameter, eventParameter, customeridParameter, searchtitleParameter);
        }
    
        public virtual int UpdateBigMarkerToken(string bigMarkerToken)
        {
            var bigMarkerTokenParameter = bigMarkerToken != null ?
                new ObjectParameter("BigMarkerToken", bigMarkerToken) :
                new ObjectParameter("BigMarkerToken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBigMarkerToken", bigMarkerTokenParameter);
        }
    
        public virtual ObjectResult<string> SpGetBigMarkerEventToken(Nullable<int> eventid)
        {
            var eventidParameter = eventid.HasValue ?
                new ObjectParameter("eventid", eventid) :
                new ObjectParameter("eventid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetBigMarkerEventToken", eventidParameter);
        }
    }
}
